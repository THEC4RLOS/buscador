package buscador;

import Paralelo.Palabra;
import Secuencial.Resultado;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.concurrent.ForkJoinPool;
import javax.swing.event.HyperlinkEvent;
import modelo.Archivo;
import modelo.PaginasWeb;

public class BrowserUI extends javax.swing.JFrame {

    ArrayList<String> urlWebPages;
    Archivo archivo;
    Palabra tareaPalabra;
    ArrayList<Resultado> mergedResulta;
    private ArrayList<PaginasWeb> sitiosWeb;

    /**
     * Creates new form BrowserUI
     */
    public BrowserUI() {
        initComponents();
        this.urlWebPages = new ArrayList<>();
        this.archivo = new Archivo();
        setUrlWebPages();
        initArrayPaginasWeb();
    }

    public void setUrlWebPages() {
        this.urlWebPages = archivo.leer();
    }

    public void metodoRaro(ArrayList<String> link, String palabra) {
        //System.out.println(link + palabra);
        Palabra myRecursiveTask = new Palabra(link, palabra);

        int cores = Runtime.getRuntime().availableProcessors();
        ForkJoinPool forkJoinPool = new ForkJoinPool(cores);
        this.mergedResulta = forkJoinPool.invoke(myRecursiveTask);
        System.out.println("termino" + mergedResulta.size());
        addResultado(mergedResulta);
        addResultado();
        
    }

    /**
     * Agrega un objeto de tipo resultado al objeto Paginas Web correcto
     *
     * @param resultado
     */
    public void addResultado(ArrayList<Resultado> resultado) {
        for (Resultado resultadoAux : resultado) {
            addResultadoAux(resultadoAux);
            //System.out.println("addResultado");
        }
    }

    public void addResultadoAux(Resultado resultado) {
        for (PaginasWeb paginaWeb : this.sitiosWeb) {
            if (paginaWeb.getUrl().equals(resultado.getUrl())) {
                paginaWeb.addItemListaResultados(resultado);
                //System.out.println("addResultadoAux");                
            }
        }
    }

    public final void initArrayPaginasWeb() {
        this.sitiosWeb = new ArrayList<>();
        for (String url : urlWebPages) {
            PaginasWeb nPaginasWeb = new PaginasWeb(url, new ArrayList<Resultado>());
            this.sitiosWeb.add(nPaginasWeb);
            //System.out.println("initArrayPaginasWeb");
        }
    }

    public void addResultado() {
        String resultado = "";
        panelResultados.setText("");
        String url = "";
        String titulo = "";
        String extracto = "";
        boolean imprimir = false;
        for (PaginasWeb resultadoBusqueda : sitiosWeb) {
            for (Resultado resultadoPalabra : resultadoBusqueda.getListaResultados()) {
                if (resultadoPalabra.getCoincidencias() != 0) {
                    imprimir = true;
                    url = resultadoPalabra.getUrl();
                    titulo = resultadoPalabra.getTitulo();
                    extracto = resultadoPalabra.getTextoCoincidencia();
                }
            }
        }
        String resul = "";
        if (imprimir) {
            System.out.println("-------------------------");
            System.out.println("Titulo: " + titulo);
            System.out.println("Url: " + url);
            System.out.println("Extracto: " + extracto);
            System.out.println("-------------------------");

            //resultado = panelResultados.getText();
            titulo = "<h2>" + titulo + "<h2/><br>";
            url = "<a href='" + url + "'>" + url + "<a/><br>";
            extracto = "<p>" + extracto + "<p/><br><br>";
            resul = titulo + url + extracto;
            resultado = resultado + resul;
            System.out.println(resultado + resul);

        }
        panelResultados.setText(resultado);
        //panelResultados.setText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTerminos = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelResultados = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Buscador");
        setPreferredSize(new java.awt.Dimension(1000, 700));

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jButton2.setText("Secuencial");

        jLabel1.setText("Modo:");

        panelResultados.setEditable(false);
        panelResultados.setContentType("text/html"); // NOI18N
        panelResultados.addHyperlinkListener(new javax.swing.event.HyperlinkListener() {
            public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {
                panelResultadosHyperlinkUpdate(evt);
            }
        });
        jScrollPane1.setViewportView(panelResultados);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTerminos, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 391, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jLabel1)
                    .addComponent(txtTerminos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        String terminos = txtTerminos.getText();
        setUrlWebPages();
        //panelResultados.setText("<h1>hola<h1/>");
        metodoRaro(this.urlWebPages, terminos);
        for (String link : urlWebPages) {
            System.out.println(link);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void panelResultadosHyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {//GEN-FIRST:event_panelResultadosHyperlinkUpdate
        // TODO add your handling code here:
        if (evt.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
            Desktop desktop = Desktop.getDesktop();
            try {
                desktop.browse(evt.getURL().toURI());
            } catch (URISyntaxException | IOException ex) {
            }
        }
    }//GEN-LAST:event_panelResultadosHyperlinkUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BrowserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BrowserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BrowserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BrowserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BrowserUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane panelResultados;
    private javax.swing.JTextField txtTerminos;
    // End of variables declaration//GEN-END:variables
}
